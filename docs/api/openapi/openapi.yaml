openapi: 3.0.0
info:
  title: Snagr AI API
  description: API for the Snagr AI application
  version: 1.0.0
servers:
  - url: http://localhost:3000/api/v1
    description: Development server
  - url: https://[production-domain]/api/v1
    description: Production server

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    Error:
      type: object
      properties:
        success:
          type: boolean
          example: false
        error:
          type: object
          properties:
            code:
              type: string
              example: VALIDATION_ERROR
            message:
              type: string
              example: Validation failed
            details:
              type: object
              example: {}

    User:
      type: object
      properties:
        id:
          type: string
          format: uuid
        email:
          type: string
          format: email
        createdAt:
          type: string
          format: date-time
        emailVerified:
          type: boolean

    UserPreferences:
      type: object
      properties:
        notificationEmail:
          type: boolean
        notificationSms:
          type: boolean
        phoneNumber:
          type: string
          nullable: true

    Search:
      type: object
      properties:
        id:
          type: string
          format: uuid
        queryText:
          type: string
        parameters:
          type: object
          properties:
            priceMin:
              type: number
              nullable: true
            priceMax:
              type: number
              nullable: true
            location:
              type: string
              nullable: true
            radius:
              type: number
              nullable: true
        isSaved:
          type: boolean
        createdAt:
          type: string
          format: date-time
        jobStatus:
          type: string
          enum: [pending, running, completed, failed]
        matchCount:
          type: integer
          nullable: true

    SavedSearch:
      type: object
      properties:
        id:
          type: string
          format: uuid
        search:
          $ref: '#/components/schemas/Search'
        frequency:
          type: string
          enum: [daily, weekly]
        isActive:
          type: boolean
        lastRunAt:
          type: string
          format: date-time
          nullable: true
        nextRunAt:
          type: string
          format: date-time
          nullable: true
        createdAt:
          type: string
          format: date-time

    Match:
      type: object
      properties:
        id:
          type: string
          format: uuid
        searchId:
          type: string
          format: uuid
        externalListingId:
          type: string
        title:
          type: string
        price:
          type: number
          format: float
        description:
          type: string
          nullable: true
        imageUrl:
          type: string
          nullable: true
        postedAt:
          type: string
          format: date-time
          nullable: true
        distance:
          type: number
          format: float
          nullable: true
        relevanceScore:
          type: number
          format: float
        isUnlocked:
          type: boolean
        createdAt:
          type: string
          format: date-time

    UnlockedMatch:
      type: object
      properties:
        id:
          type: string
          format: uuid
        match:
          $ref: '#/components/schemas/Match'
        sellerInfo:
          type: object
          properties:
            name:
              type: string
            contactMethod:
              type: string
            contactUrl:
              type: string
        listingUrl:
          type: string
        suggestedMessage:
          type: string
          nullable: true
        unlockedAt:
          type: string
          format: date-time

    Payment:
      type: object
      properties:
        id:
          type: string
          format: uuid
        stripePaymentId:
          type: string
        amount:
          type: integer
        currency:
          type: string
        status:
          type: string
          enum: [pending, completed, failed, refunded, refund_pending]
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time

    Notification:
      type: object
      properties:
        id:
          type: string
          format: uuid
        type:
          type: string
          enum: [email, sms]
        status:
          type: string
          enum: [pending, sent, failed]
        content:
          type: string
        createdAt:
          type: string
          format: date-time
        sentAt:
          type: string
          format: date-time
          nullable: true
        isRead:
          type: boolean
        readAt:
          type: string
          format: date-time
          nullable: true

    Pagination:
      type: object
      properties:
        page:
          type: integer
        limit:
          type: integer
        total:
          type: integer
        pages:
          type: integer

  responses:
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    NotFound:
      description: Not Found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    ValidationError:
      description: Validation Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    InternalError:
      description: Internal Server Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

security:
  - bearerAuth: []

paths:
  /auth/register:
    post:
      tags:
        - Authentication
      summary: Register a new user
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
                - confirmPassword
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
                  format: password
                confirmPassword:
                  type: string
                  format: password
      responses:
        '201':
          description: User registered successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      user:
                        $ref: '#/components/schemas/User'
                      token:
                        type: string
        '400':
          $ref: '#/components/responses/ValidationError'
        '409':
          description: Email already in use
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /auth/login:
    post:
      tags:
        - Authentication
      summary: Login a user
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
                  format: password
      responses:
        '200':
          description: User logged in successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      user:
                        $ref: '#/components/schemas/User'
                      token:
                        type: string
        '400':
          $ref: '#/components/responses/ValidationError'
        '401':
          $ref: '#/components/responses/Unauthorized'

  /auth/me:
    get:
      tags:
        - Authentication
      summary: Get current user
      responses:
        '200':
          description: Current user information
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      user:
                        $ref: '#/components/schemas/User'
        '401':
          $ref: '#/components/responses/Unauthorized'

  /users/profile:
    get:
      tags:
        - Users
      summary: Get user profile
      responses:
        '200':
          description: User profile
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      user:
                        allOf:
                          - $ref: '#/components/schemas/User'
                          - type: object
                            properties:
                              preferences:
                                $ref: '#/components/schemas/UserPreferences'
        '401':
          $ref: '#/components/responses/Unauthorized'
    
    patch:
      tags:
        - Users
      summary: Update user profile
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
      responses:
        '200':
          description: User profile updated
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      user:
                        $ref: '#/components/schemas/User'
        '400':
          $ref: '#/components/responses/ValidationError'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '409':
          description: Email already in use
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /searches:
    post:
      tags:
        - Searches
      summary: Create a new search
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - queryText
              properties:
                queryText:
                  type: string
                parameters:
                  type: object
                  properties:
                    priceMin:
                      type: number
                    priceMax:
                      type: number
                    location:
                      type: string
                    radius:
                      type: number
                isSaved:
                  type: boolean
                  default: false
      responses:
        '201':
          description: Search created
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      search:
                        $ref: '#/components/schemas/Search'
        '400':
          $ref: '#/components/responses/ValidationError'
        '401':
          $ref: '#/components/responses/Unauthorized'
    
    get:
      tags:
        - Searches
      summary: List searches
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            default: 1
        - name: limit
          in: query
          schema:
            type: integer
            default: 20
        - name: sort
          in: query
          schema:
            type: string
            default: -createdAt
        - name: filter[isSaved]
          in: query
          schema:
            type: boolean
      responses:
        '200':
          description: List of searches
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      searches:
                        type: array
                        items:
                          $ref: '#/components/schemas/Search'
                  meta:
                    type: object
                    properties:
                      pagination:
                        $ref: '#/components/schemas/Pagination'
        '400':
          $ref: '#/components/responses/ValidationError'
        '401':
          $ref: '#/components/responses/Unauthorized'

  /searches/{id}:
    get:
      tags:
        - Searches
      summary: Get a search by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Search details
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      search:
                        $ref: '#/components/schemas/Search'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'

  /matches:
    get:
      tags:
        - Matches
      summary: List matches for a search
      parameters:
        - name: searchId
          in: query
          required: true
          schema:
            type: string
            format: uuid
        - name: page
          in: query
          schema:
            type: integer
            default: 1
        - name: limit
          in: query
          schema:
            type: integer
            default: 20
        - name: sort
          in: query
          schema:
            type: string
            default: -relevanceScore
        - name: filter[priceMin]
          in: query
          schema:
            type: number
        - name: filter[priceMax]
          in: query
          schema:
            type: number
        - name: filter[distance]
          in: query
          schema:
            type: number
        - name: filter[unlocked]
          in: query
          schema:
            type: boolean
      responses:
        '200':
          description: List of matches
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      matches:
                        type: array
                        items:
                          $ref: '#/components/schemas/Match'
                  meta:
                    type: object
                    properties:
                      pagination:
                        $ref: '#/components/schemas/Pagination'
        '400':
          $ref: '#/components/responses/ValidationError'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'

  /matches/{id}/unlock:
    post:
      tags:
        - Matches
      summary: Unlock a match
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Payment intent created
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      paymentIntent:
                        type: object
                        properties:
                          id:
                            type: string
                          clientSecret:
                            type: string
                          amount:
                            type: integer
                          currency:
                            type: string
                      match:
                        type: object
                        properties:
                          id:
                            type: string
                            format: uuid
                          title:
                            type: string
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '409':
          description: Match already unlocked
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          $ref: '#/components/responses/InternalError'

  /payments/history:
    get:
      tags:
        - Payments
      summary: Get payment history
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            default: 1
        - name: limit
          in: query
          schema:
            type: integer
            default: 20
        - name: sort
          in: query
          schema:
            type: string
            default: -createdAt
        - name: filter[status]
          in: query
          schema:
            type: string
            enum: [completed, failed, refunded]
      responses:
        '200':
          description: Payment history
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      payments:
                        type: array
                        items:
                          allOf:
                            - $ref: '#/components/schemas/Payment'
                            - type: object
                              properties:
                                match:
                                  type: object
                                  properties:
                                    id:
                                      type: string
                                      format: uuid
                                    title:
                                      type: string
                  meta:
                    type: object
                    properties:
                      pagination:
                        $ref: '#/components/schemas/Pagination'
        '400':
          $ref: '#/components/responses/ValidationError'
        '401':
          $ref: '#/components/responses/Unauthorized'

  /notifications:
    get:
      tags:
        - Notifications
      summary: List notifications
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            default: 1
        - name: limit
          in: query
          schema:
            type: integer
            default: 20
        - name: sort
          in: query
          schema:
            type: string
            default: -createdAt
        - name: filter[type]
          in: query
          schema:
            type: string
            enum: [email, sms]
        - name: filter[status]
          in: query
          schema:
            type: string
            enum: [pending, sent, failed]
      responses:
        '200':
          description: List of notifications
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      notifications:
                        type: array
                        items:
                          $ref: '#/components/schemas/Notification'
                  meta:
                    type: object
                    properties:
                      pagination:
                        $ref: '#/components/schemas/Pagination'
        '400':
          $ref: '#/components/responses/ValidationError'
        '401':
          $ref: '#/components/responses/Unauthorized'